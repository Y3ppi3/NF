"""Initial database setup

Revision ID: e6b05d60ec9e
Revises: 
Create Date: 2025-05-20 05:28:11.006315

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e6b05d60ec9e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('administrators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('permissions', sa.String(length=255), nullable=True),
    sa.Column('position', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_administrators_email'), 'administrators', ['email'], unique=True)
    op.create_index(op.f('ix_administrators_id'), 'administrators', ['id'], unique=False)
    op.create_index(op.f('ix_administrators_username'), 'administrators', ['username'], unique=True)
    op.create_table('warehouses',
    sa.Column('id', sa.Integer(), server_default="nextval('warehouses_id_seq'::regclass)", nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('type', sa.Enum('WAREHOUSE', 'STORE', name='warehousetype'), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('manager_name', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default='CURRENT_TIMESTAMP', nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_warehouses_id'), 'warehouses', ['id'], unique=False)
    op.create_table('supplies',
    sa.Column('id', sa.Integer(), server_default="nextval('supplies_id_seq'::regclass)", nullable=False),
    sa.Column('supplier', sa.String(length=100), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PLANNED', 'IN_TRANSIT', 'RECEIVED', 'PROCESSED', 'CANCELLED', name='supplystatus'), nullable=False),
    sa.Column('shipment_date', sa.DateTime(), nullable=False),
    sa.Column('expected_arrival_date', sa.DateTime(), nullable=True),
    sa.Column('actual_arrival_date', sa.DateTime(), nullable=True),
    sa.Column('reference_number', sa.String(length=100), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default='CURRENT_TIMESTAMP', nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default='CURRENT_TIMESTAMP', nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_supplies_id'), 'supplies', ['id'], unique=False)
    op.create_index(op.f('ix_supplies_status'), 'supplies', ['status'], unique=False)
    op.create_index(op.f('ix_supplies_supplier'), 'supplies', ['supplier'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=False),
    sa.Column('payment_status', sa.String(length=50), nullable=True),
    sa.Column('transaction_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_table('price_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('changed_at', sa.DateTime(), nullable=False),
    sa.Column('changed_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_price_history_id'), 'price_history', ['id'], unique=False)
    op.create_table('shipments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('shipping_address', sa.String(length=255), nullable=True),
    sa.Column('tracking_number', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('estimated_delivery', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_shipments_id'), 'shipments', ['id'], unique=False)
    op.create_table('stock_movements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('movement_type', sa.Enum('INCOMING', 'OUTGOING', 'TRANSFER', name='movementtype'), nullable=False),
    sa.Column('source_warehouse_id', sa.Integer(), nullable=True),
    sa.Column('target_warehouse_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['source_warehouse_id'], ['warehouses.id'], ),
    sa.ForeignKeyConstraint(['target_warehouse_id'], ['warehouses.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_movements_id'), 'stock_movements', ['id'], unique=False)
    op.create_table('stocks',
    sa.Column('id', sa.Integer(), server_default="nextval('stocks_id_seq'::regclass)", nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default='CURRENT_TIMESTAMP', nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stocks_id'), 'stocks', ['id'], unique=False)
    op.create_table('supply_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('supply_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('product_name', sa.String(length=255), nullable=False),
    sa.Column('quantity_ordered', sa.Integer(), nullable=False),
    sa.Column('quantity_received', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('is_received', sa.Boolean(), nullable=False),
    sa.Column('received_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['supply_id'], ['supplies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_supply_items_id'), 'supply_items', ['id'], unique=False)
    op.create_index(op.f('ix_supply_items_supply_id'), 'supply_items', ['supply_id'], unique=False)
    op.alter_column('cart_items', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('cart_items', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('cart_items', 'created_at')
    op.create_index(op.f('ix_categories_name'), 'categories', ['name'], unique=False)
    op.alter_column('order_items', 'order_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('order_items', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('order_items', 'quantity',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('order_items', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.add_column('orders', sa.Column('client_name', sa.String(length=255), nullable=True))
    op.add_column('orders', sa.Column('total_price', sa.Float(), nullable=False))
    op.add_column('orders', sa.Column('delivery_address', sa.Text(), nullable=True))
    op.add_column('orders', sa.Column('contact_phone', sa.String(length=50), nullable=True))
    op.add_column('orders', sa.Column('payment_method', sa.String(length=50), nullable=True))
    op.add_column('orders', sa.Column('tracking_number', sa.String(length=50), nullable=True))
    op.add_column('orders', sa.Column('courier_name', sa.String(length=100), nullable=True))
    op.add_column('orders', sa.Column('delivery_notes', sa.Text(), nullable=True))
    op.add_column('orders', sa.Column('estimated_delivery', sa.Date(), nullable=True))
    op.add_column('orders', sa.Column('order_items', sa.JSON(), nullable=True))
    op.drop_column('orders', 'total_amount')
    op.drop_column('products', 'stock_quantity')
    op.alter_column('users', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'birthday',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_phone', table_name='users')
    op.create_unique_constraint(None, 'users', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.create_index('ix_users_phone', 'users', ['phone'], unique=True)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.alter_column('users', 'birthday',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
    op.alter_column('users', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('products', sa.Column('stock_quantity', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('orders', sa.Column('total_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_column('orders', 'order_items')
    op.drop_column('orders', 'estimated_delivery')
    op.drop_column('orders', 'delivery_notes')
    op.drop_column('orders', 'courier_name')
    op.drop_column('orders', 'tracking_number')
    op.drop_column('orders', 'payment_method')
    op.drop_column('orders', 'contact_phone')
    op.drop_column('orders', 'delivery_address')
    op.drop_column('orders', 'total_price')
    op.drop_column('orders', 'client_name')
    op.alter_column('order_items', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('order_items', 'quantity',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('order_items', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('order_items', 'order_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_categories_name'), table_name='categories')
    op.add_column('cart_items', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.alter_column('cart_items', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('cart_items', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_supply_items_supply_id'), table_name='supply_items')
    op.drop_index(op.f('ix_supply_items_id'), table_name='supply_items')
    op.drop_table('supply_items')
    op.drop_index(op.f('ix_stocks_id'), table_name='stocks')
    op.drop_table('stocks')
    op.drop_index(op.f('ix_stock_movements_id'), table_name='stock_movements')
    op.drop_table('stock_movements')
    op.drop_index(op.f('ix_shipments_id'), table_name='shipments')
    op.drop_table('shipments')
    op.drop_index(op.f('ix_price_history_id'), table_name='price_history')
    op.drop_table('price_history')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_supplies_supplier'), table_name='supplies')
    op.drop_index(op.f('ix_supplies_status'), table_name='supplies')
    op.drop_index(op.f('ix_supplies_id'), table_name='supplies')
    op.drop_table('supplies')
    op.drop_index(op.f('ix_warehouses_id'), table_name='warehouses')
    op.drop_table('warehouses')
    op.drop_index(op.f('ix_administrators_username'), table_name='administrators')
    op.drop_index(op.f('ix_administrators_id'), table_name='administrators')
    op.drop_index(op.f('ix_administrators_email'), table_name='administrators')
    op.drop_table('administrators')
    # ### end Alembic commands ###
